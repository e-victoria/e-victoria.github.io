{"version":3,"sources":["./src/app/accordion/accordion.component.ts","./src/app/accordion/accordion.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/accordion/accordion.service.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/accordion-list/accordion-list.component.ts","./src/app/accordion-list/accordion-list.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport Accordion from './Accordion.model';\nimport {AccordionService} from './accordion.service';\n\n@Component({\n  selector: 'app-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.scss']\n})\nexport class AccordionComponent implements OnInit {\n\n  @Input('id')\n  id: string;\n  accordion: Accordion;\n  @ViewChild('balance')\n  private balanceContainer: ElementRef;\n  @ViewChild('accordionEl')\n  private accordionEl: ElementRef;\n  @ViewChild('additionalInfo')\n  private additionalInfo: ElementRef;\n  @ViewChild('infoBtn')\n  private infoBtn: ElementRef;\n\n  constructor(private accordionService: AccordionService) { }\n\n  ngOnInit(): void {\n    this.getAccordionData();\n  }\n\n  getAccordionData(): void {\n    this.accordion = this.accordionService.getAccountById(this.id);\n  }\n\n  showDetails(): void {\n    this.balanceContainer.nativeElement.classList.toggle('hidden');\n    this.accordionEl.nativeElement.classList.toggle('accordion--expanded');\n    this.additionalInfo.nativeElement.classList.toggle('hidden');\n    this.infoBtn.nativeElement.classList.toggle('hidden');\n  }\n\n}\n","<section class=\"section\">\n  <h1 class=\"visually-hidden\">Account</h1>\n  <div #accordionEl class=\"accordion\">\n    <div #infoBtn class=\"accordion__info-btn hidden\">\n      <span></span>\n      <span></span>\n      <span></span>\n    </div>\n    <p class=\"accordion__bank\">{{ accordion.bank }}</p>\n    <div class=\"accordion__wrapper\">\n      <div class=\"accordion__info\">\n        <h2 class=\"accordion__header\">\n          <button class=\"accordion__header-btn\" (click)=\"showDetails()\" type=\"button\">\n            {{ accordion.title }}\n          </button>\n        </h2>\n        <p class=\"accordion__account\">{{ accordion.account_number }}</p>\n      </div>\n      <div #balance class=\"accordion__balance balance\">\n        <h3 class=\"balance__header\">Dostępne środki</h3>\n        <p class=\"balance__available {{ accordion.available_amount < 0 ? 'balance__available--negative' : '' }}\">{{ accordion.available_amount.toLocaleString('fr') }} <span class=\"balance__currency\">{{ accordion.currency }}</span></p>\n      </div>\n      <div #additionalInfo class=\"accordion__additional-info additional-info hidden\">\n        <div class=\"additional-info__balance-wrapper\">\n          <div class=\"additional-info__balance\">\n            <div class=\"additional-info__balance-item\">\n              <p class=\"additional-info__balance-item-title\">Saldo</p>\n              <p class=\"{{ accordion.balance < 0 ? 'balance__available--negative' : '' }}\">{{ accordion.balance.toLocaleString('fr') }} {{ accordion.currency }}</p>\n            </div>\n            <div class=\"additional-info__balance-item\">\n              <p class=\"additional-info__balance-item-title\">Blokady</p>\n              <p class=\"{{ accordion.blocked_amount < 0 ? 'balance__available--negative' : '' }}\">{{ accordion.blocked_amount.toLocaleString('fr') }} {{ accordion.currency }}</p>\n            </div>\n          </div>\n          <div class=\"additional-info__balance\">\n            <p class=\"additional-info__available-title\">Dostępne środki</p>\n            <p *ngIf=\"accordion.renewable_limit.overall > 0\" class=\"additional-info__available-title\">w tym limit odnawialny: {{ accordion.renewable_limit.overall.toLocaleString('fr') }}</p>\n            <p class=\"additional-info__available-balance\"><span class=\"{{ accordion.available_amount < 0 ? 'balance__available--negative' : '' }}\">{{ accordion.available_amount.toLocaleString('fr') }}</span> {{ accordion.currency }}</p>\n          </div>\n        </div>\n        <div class=\"additional-info__btn-wrapper\">\n          <button class=\"additional-info__btn\" type=\"button\">Szczegóły</button>\n          <button class=\"additional-info__btn\" type=\"button\">Historia</button>\n          <button *ngIf=\"accordion.canTransfer\" class=\"additional-info__btn additional-info__btn--transfer\" type=\"button\">Przelew</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'accordion-recruitment';\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport Accordion from './Accordion.model';\n\ndeclare var require: any;\nconst data: any = require('../accounts.json');\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AccordionService {\n\n  data: Accordion[];\n\n  constructor() {}\n\n  getData(): void {\n    this.data = data;\n  }\n\n  getAccountsIdsList(): string[] {\n    const accountsIds: string[] = [];\n\n    for (const account of this.data) {\n      accountsIds.push(account.id);\n    }\n\n    return accountsIds;\n  }\n\n  getAccountById(id: string): Accordion {\n    for (const account of this.data) {\n      if (account.id === id) {\n        if (typeof account.available_amount === 'string') {\n          account.available_amount = parseFloat(account.available_amount);\n        }\n        if (typeof account.blocked_amount === 'string') {\n          account.blocked_amount = parseFloat(account.blocked_amount);\n        }\n        if (typeof account.balance === 'string') {\n          account.balance = parseFloat(account.balance);\n        }\n        if (typeof account.renewable_limit.overall === 'string') {\n          account.renewable_limit.overall = parseFloat(account.renewable_limit.overall);\n        }\n        return account;\n      }\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { Approutes } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AccordionComponent } from './accordion/accordion.component';\nimport { AccordionListComponent } from './accordion-list/accordion-list.component';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccordionComponent,\n    AccordionListComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    RouterModule.forRoot(Approutes),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\nimport {AccordionListComponent} from './accordion-list/accordion-list.component';\n\nexport const Approutes: Routes = [\n  {\n    path: '',\n    component: AccordionListComponent\n  },\n];\n","import { Component, OnInit } from '@angular/core';\nimport Accordion from '../accordion/Accordion.model';\nimport {AccordionService} from '../accordion/accordion.service';\n\n@Component({\n  selector: 'app-accordion-list',\n  templateUrl: './accordion-list.component.html',\n  styleUrls: ['./accordion-list.component.scss']\n})\nexport class AccordionListComponent implements OnInit {\n\n  accordionList: string[];\n\n  constructor(private accordionService: AccordionService) { }\n\n  ngOnInit(): void {\n    this.accordionService.getData();\n    this.accordionList = this.accordionService.getAccountsIdsList();\n  }\n\n}\n","<section class=\"section accordions\">\n  <ul class=\"accordions__list\">\n    <li class=\"accordions__item\" *ngFor=\"let accordion of accordionList\">\n      <app-accordion id=\"{{ accordion }}\"></app-accordion>\n    </li>\n  </ul>\n</section>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}